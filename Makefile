# =============================================================================
# Makefile для проекта с поддиректориями
#
# Запускать ИСКЛЮЧИТЕЛЬНО из корневой директории проекта ('prak/').
#
# Использование:
#   make <путь/к/файлу_без_расширения>
#
# Пример:
#   make mz01/mz01-4
# =============================================================================

# --- Компиляторы и флаги ---
CXX = g++
CXXFLAGS = -std=c++23 -Wall -Werror -O2
FORMATTER = clang-format
FORMAT_FLAGS = -i

# --- Обнаружение исходников и целей ---
# Находим все .cpp файлы во всех поддиректориях
SOURCES = $(wildcard */*.cpp)

# Создаем список исполняемых файлов, убирая расширение .cpp
# Например, 'mz01/mz01-4.cpp' превратится в 'mz01/mz01-4'
TARGETS = $(patsubst %.cpp, %, $(SOURCES))

# --- Цели (Targets) ---

# Цель по умолчанию: собрать всё.
all: $(TARGETS)

# Главное шаблонное правило для компиляции
# Говорит, как из 'dir/file.cpp' сделать 'dir/file'
%/ : %/.cpp
	@echo "--- Форматирование $< ---"
	$(FORMATTER) $(FORMAT_FLAGS) $<
	@echo "--- Компиляция $< в $@ ---"
	$(CXX) $(CXXFLAGS) $< -o $@
	@echo "--- Готово! Исполняемый файл: $@ ---"

# Цель для очистки
clean:
	@echo "--- Очистка скомпилированных файлов ---"
	-rm -f $(TARGETS)

# Объявляем цели, которые не являются реальными файлами
.PHONY: all clean


